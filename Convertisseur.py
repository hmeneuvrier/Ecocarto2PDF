import json
from fpdf import FPDF

# ‚úÖ Nettoyage des caract√®res sp√©ciaux
def clean_text(text):
    if isinstance(text, str):
        texte = text.replace("‚Äô","'").encode('latin-1','replace').decode('latin-1')
        texte = texte.replace("‚ãÖ","-").encode('latin-1','replace').decode('latin-1')
        texte = texte.replace("<br>","\n").encode('latin-1','replace').decode('latin-1')
        texte = texte.replace("<b>","").encode('latin-1','replace').decode('latin-1')
        texte = texte.replace("</b>","").encode('latin-1','replace').decode('latin-1')
        texte = texte.replace("‚Ä¶","...").encode('latin-1','replace').decode('latin-1')
        texte = texte.replace("\u22c5","-").encode('latin-1','replace').decode('latin-1')
        return texte
    return str(text)

# Dictionnaire de traduction des jours en fran√ßais
jours_francais = {
    "Mo": "Lundi",
    "Tu": "Mardi",
    "We": "Mercredi",
    "Th": "Jeudi",
    "Fr": "Vendredi",
    "Sa": "Samedi",
    "Su": "Dimanche"
}

# üìÑ Classe PDF avec "horaires particuliers"
class PDFUpdated(FPDF):
    def __init__(self):
        super().__init__()
        self.set_font('Arial', '', 12)

    def header(self):
        if self.page_no() == 1:
            self.image('logo.png', 68, 25, 80)
            self.ln(117)

        if self.page_no() > 1:
            self.set_font('Arial', 'I', 10)
            self.cell(0, 10, '', 0, 0, 'C')
            self.ln(10)

    def footer(self):
        self.set_y(-15)
        self.set_font('Arial', 'I', 8)
        self.cell(0, 10, f'Page {self.page_no()}', 0, 0, 'C')

    def chapter_title(self, title):
        self.set_font('Arial', 'B', 14)
        self.set_fill_color(84, 177, 95)
        self.cell(0, 10, clean_text(title), 0, 1, 'L', True)
        self.ln(15)

    def chapter_body(self, body):
        self.set_font('Arial', '', 12)
        self.multi_cell(0, 10, clean_text(body))
        self.ln()

    def add_entity(self, entity):
        name = entity.get('name', 'Nom inconnu')
        self.set_font('Arial', 'B', 12)
        self.cell(0, 10, clean_text(name), ln=True)
        self.set_font('Arial', '', 11)

        details = [
            f"Adresse : {entity.get('address', {}).get('customFormatedAddress', 'Non renseign√©e')}",
            f"T√©l√©phone : {entity.get('telephone', 'Non renseign√©')}",
            f"Email : {entity.get('email', 'Non renseign√©')}",
            f"Site Web : {entity.get('url', 'Non renseign√©')}",
            f"D√©tails : {entity.get('details', 'Non renseign√©')}"
        ]

        # üìÖ Horaires d'ouverture
        open_hours = entity.get('openHours', {})
        if open_hours:
            self.cell(0, 10, "Horaires d'ouverture :", ln=True)
            self.set_font('Arial', '', 10)
            for day, hour in open_hours.items():
                jour_fr = jours_francais.get(day, day)
                self.multi_cell(0, 8, f"{jour_fr}: {hour}")
            self.ln(3)

        # üïë Horaires particuliers
        horaires_particuliers = entity.get('detailshoraires', None)
        if horaires_particuliers:
            self.set_font('Arial', 'B', 11)
            self.cell(0, 10, "Horaires particuliers :", ln=True)
            self.set_font('Arial', '', 10)
            self.multi_cell(0, 8, clean_text(horaires_particuliers))
            self.ln(3)

        for detail in details:
            self.multi_cell(0, 8, clean_text(detail))
        self.ln(5)

        if self.get_y() > 260:
            self.add_page()


# üìö Chargement du fichier JSON
with open('elements.json', 'r', encoding='utf-8') as f:
    data = json.load(f)

# üñ®Ô∏è Cr√©ation du PDF final
pdf = PDFUpdated()
pdf.set_auto_page_break(auto=True, margin=15)
pdf.add_page()

# ‚úçÔ∏è Introduction
intro = ("Ce document regroupe les informations des ressourceries, ateliers de cr√©ation, producteurs locaux et d'autres situ√©s autour de Saint mars du D√©sert. Les donn√©es proviennent d'une cartographie r√©alis√©e par le Collectif Eco-citoyen marsien qui contient l'enri√®rt√© des informations trier et placer sur une carte (n'h√©sitez pas √† aller consulter sur le site du Tiers lieu : https://tierslieumarsien.fr/le-collectif-eco-citoyen/). Cependant afin d'am√©liorer la lisibilit√© et la consultation de ces informations, nous avons aussi centralis√© toutes les donn√©es dans ce document unique. Chaque lieu est d√©crit de mani√®re pr√©sice avec le plus d'informations possibles. Cette initiative s'inscrit dans notre engagement pour soutenir des actions locales qui constituent une √©conomie circulaire. Nous esp√©rons que ce guide vous aidera √† trouver facilement les ressources disponibles pr√®s de chez vous. N'h√©sitez pas √† consulter la cartographie en ligne pour plus de d√©tails.")

pdf.chapter_title("Tiers lieu marsien : Collectif eco-citoyen")
pdf.chapter_body(intro)

# üìã Ajout des entit√©s
pdf.chapter_title("Catalogue des ressourceries et producteurs locaux et bien plus....")
for entity in data.get("data", []):
    pdf.add_entity(entity)

# üíæ Sauvegarde du PDF final
pdf.output('Donn√©es de la Carto - Complet.pdf')

print("‚úÖ PDF g√©n√©r√© avec succ√®s : 'Donn√©es de la Carto - Complet.pdf'")
